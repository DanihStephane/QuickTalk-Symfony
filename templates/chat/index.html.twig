{% extends 'base.html.twig' %}

{% block title %}Chat en temps réel{% endblock %}

{% block stylesheets %}
<style>
    .chat-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
    }
    .messages {
        height: 400px;
        overflow-y: auto;
        border: 1px solid #ddd;
        padding: 15px;
        margin-bottom: 20px;
        border-radius: 5px;
    }
    .message {
        margin-bottom: 10px;
        padding: 10px;
        border-radius: 5px;
        background-color: #f8f9fa;
    }
    .message-form {
        display: flex;
        gap: 10px;
    }
    .message-input {
        flex-grow: 1;
        padding: 8px;
        border: 1px solid #ddd;
        border-radius: 5px;
    }
    .send-button {
        padding: 8px 20px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }
    .send-button:hover {
        background-color: #0056b3;
    }
</style>
{% endblock %}

{% block body %}
<div class="chat-container">
    <h1>Chat en temps réel</h1>
    
    <div class="messages" id="messages">
        {% for message in messages %}
            <div class="message">
                <strong>{{ message.sender.username }}</strong>
                <small>{{ message.createdAt|date('H:i:s') }}</small>
                <p>{{ message.content }}</p>
            </div>
        {% endfor %}
    </div>

    <form class="message-form" id="message-form">
        <input type="text" id="message-input" class="message-input" placeholder="Votre message..." required>
        <button type="submit" class="send-button">Envoyer</button>
    </form>
</div>
{% endblock %}

{% block javascripts %}
<script>
    const messagesContainer = document.getElementById('messages');
    const messageForm = document.getElementById('message-form');
    const messageInput = document.getElementById('message-input');

    // Connexion au hub Mercure
    const eventSource = new EventSource("{{ mercure('chat')|escape('js') }}");
    
    eventSource.onmessage = (event) => {
        const data = JSON.parse(event.data);
        addMessageToChat(data);
    };

    messageForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const content = messageInput.value;
        if (!content.trim()) return;

        try {
            const response = await fetch('{{ path('app_chat_send') }}', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: `content=${encodeURIComponent(content)}`
            });

            if (response.ok) {
                messageInput.value = '';
            }
        } catch (error) {
            console.error('Erreur lors de l\'envoi du message:', error);
        }
    });

    function addMessageToChat(message) {
        const messageElement = document.createElement('div');
        messageElement.className = 'message';
        messageElement.innerHTML = `
            <strong>${message.sender}</strong>
            <small>${message.createdAt}</small>
            <p>${message.content}</p>
        `;
        
        messagesContainer.appendChild(messageElement);
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
    }
</script>
{% endblock %}